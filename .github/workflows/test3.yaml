name: Release Push CI
on:
  workflow_run:
    workflows: ["Auto Release on Push to Main"]
    types:
      - completed
  release:
    types: [published]


jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: List all files and paths
      run: |
        echo "Listing all files and paths in the repository:"
        find . -type f

    - name: Set Environment Variables
      run: |
        echo "PYTHONPATH=$PWD/login_testcases/homeobjects:$PWD/Configuration/configfile/config.py" >> $GITHUB_ENV
        echo "MONGO_URI=mongodb://127.0.0.1:27017/sampleupload" >> $GITHUB_ENV

    - name: Wait for MongoDB to be ready
      run: |
        until nc -zv localhost 27017; do
          echo "Waiting for MongoDB to start..."
          sleep 1
        done
        echo "MongoDB is ready"

    - name: Configure MongoDB Test Data
      run: |
        python configfile/config.py

    - name: Set up ChromeDriver and Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: 'latest'

    - name: Set Timezone to India Standard Time (IST)
      run: sudo timedatectl set-timezone Asia/Kolkata

    - name: Run Selenium tests and generate HTML report
      id: run_tests
      run: |
        pytest --html=report.html --self-contained-html > pytest_test_results.log || exit 0
        cat pytest_test_results.log

    - name: Show Test Results Log
      run: cat  pytest_test_results.log
    - name: Send Email Notification
      run: |
          if [ "${{ steps.test_run.outcome }}" == "success or failure" ]; then
            python send_email_notification.py success
          else
            python send_email_notification.py failure
          fi
      env:
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}  # Store sender email in GitHub secrets
          SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}  # Store sender password in GitHub secrets
          RECIPIENT_EMAIL: antony.silvesta@nidrive.in  # Store recipient email in GitHub secrets